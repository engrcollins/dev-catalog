{"version":3,"sources":["materials/header1.png","materials/header2.png","Header.js","Navigation.js","http-common.js","services/CustomerService.js","components/Home.js","components/AddCustomer.js","components/Customer.js","components/CustomersList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","setDate","month","day","date","year","now","Date","mm","getMonth","dd","getDay","dt","getDate","yyyy","getFullYear","secs","getSeconds","mins","getMinutes","hrs","getHours","hours","minutes","seconds","meridian","document","querySelector","innerHTML","setInterval","className","onClick","src","header1","alt","align","header2","id","ArchiveNav","href","target","type","name","React","Component","axios","create","baseURL","headers","http","get","data","post","put","delete","title","Home","AddCustomer","initialCustomerState","category","description","source","URL","author","tags","published","useState","customer","setCustomer","submitted","setSubmitted","handleInputChange","event","value","article-form","htmlFor","required","onChange","CustomerDataService","then","response","console","log","catch","e","Customer","props","currentCustomer","setCurrentCustomer","message","setMessage","useEffect","match","params","updatePublished","status","dource","history","push","CustomersList","customers","setCustomers","currentIndex","setCurrentIndex","searchTitle","setSearchTitle","retrieveCustomers","placeholder","onKeyUp","searchInput","getElementById","toLowerCase","allTitle","getElementsByClassName","i","length","includes","parentElement","style","display","map","index","key","setActiveCustomer","url","to","App","marginLeft","textAlign","activeClassName","path","component","Boolean","window","location","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6e2fbd6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header1.a6b7140d.png\";","module.exports = __webpack_public_path__ + \"static/media/header2.64c1ea7d.png\";","import React from 'react'\r\nimport header1 from './materials/header1.png'\r\nimport header2 from './materials/header2.png'\r\nconst Header = () => {\r\n    const  setDate = () => {\r\n      const now = new Date();\r\n      const mm = now.getMonth();\r\n      const dd = now.getDay();\r\n      const dt = now.getDate();\r\n      const yyyy = now.getFullYear();\r\n      const secs = now.getSeconds();\r\n      const mins = now.getMinutes();\r\n      const hrs = now.getHours();\r\n      const monthName = [\r\n        'January','February','March','April',\r\n        'May','June','July','August','September',\r\n        'October','November','December'\r\n      ];\r\n      const dayName = [ 'Sunday', 'Monday', 'Tuesday',\r\n        'Wednesday', 'Thursday', 'Friday',\r\n        'Saturday'\r\n      ];\r\n      \r\n      var hours =\"\";\r\n      var minutes=\"\";\r\n      var seconds=\"\";\r\n\r\n      var month=\"\";\r\n      var day=\"\";\r\n      var date=\"\";\r\n      var year=\"\";\r\n      var meridian =\"\";\r\n      if (hrs > 12) {\r\n        hours = hrs - 12;\r\n        meridian = \"pm\";\t\r\n      } else {\r\n        hours = hrs;\r\n        if(hours === 12){\r\n          meridian = \"pm\";\r\n        }else{\r\n          meridian = \"am\";\r\n        }\r\n      }\r\n\r\n      if (hours < 10) {\r\n        hours = '0' + hours;\r\n      }\r\n      if (secs < 10) {\r\n        seconds = '0' + secs;\r\n      } else {\r\n        seconds = secs;\r\n      }\r\n      \r\n      if (mins < 10) {\r\n        minutes= '0' + mins;\r\n      } else {\r\n        minutes = mins;\r\n      }\r\n      month = monthName[mm];\r\n      day = dayName[dd];\r\n      date = dt;\r\n      year = yyyy;\r\n      const presentDate = document.querySelector('.date');\r\n      //present.innerHTML = \r\n      presentDate.innerHTML = `Date: ${day}, ${date} ${month} ${year}. | Time: ${hours}:${minutes}:${seconds}${meridian}`;\r\n      //dt +\" \" +month +\" \" +year\". | Time\r\n      const copyright = document.querySelector('.copyright');\r\n      //copyright.innerHTML = year;\r\n    }\r\n    setInterval(setDate,1000);\r\n      return (\r\n        <div>\r\n          <div className=\"header grid-header\" onClick={setDate}> \r\n            <img className=\"item1 logo1\" src={header1} alt=\"logo\" />\r\n              <h2>WEB ARCHIVE</h2>\r\n            <img align=\"right\" className=\"item4 cub\" src={header2} alt=\"logo2\" />\r\n          </div>\r\n          <div className=\"item1\">\r\n            <h3 align=\"center\" id=\"welcome\"><p className=\"date\"></p></h3>\r\n          </div>\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default Header\r\n","\r\nimport React from 'react'\r\n\r\nclass ArchiveNav extends React.Component{\r\n    render(){\r\n        return(\r\n                <div className=\"navigation\">\r\n                    <nav className=\"row navbar navbar-inverse\">\r\n                        <div className=\"container-fluid\">\r\n                            <ul className=\"col-6 nav navbar-nav\">\r\n                                <li className=\"active\"><a href=\"#\">Home</a></li>\r\n                                <li><a href=\"#\">Categories</a>\r\n\r\n                                    <ul className=\"dropdown nav nav-tabs\">\r\n                                        <li><a href=\"./number-theory/theory-one.html\" target=\"_blank\">Number Theory</a></li>\r\n                                        <li><a href=\"./algorithms/binary-search.html\" target=\"_blank\">Simple Algorithms</a></li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li><a href=\"about.html\" target=\"_blank\">About Us</a></li>\r\n                                <li><a href=\"#\">Contact Us</a></li>\r\n                            </ul>\r\n                            <div className=\"col-6  search\">\r\n                                <button type=\"submit\" className=\"searchbutton\"><span className=\"glyphicon glyphicon-search\"></span></button>\r\n                                <input className=\"searchbox\" name=\"searchbox\" className=\"searchbox\" type=\"text\" placeholder=\"Search Archive\" />\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ArchiveNav","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://cub-tapestry.herokuapp.com\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n  }\r\n});\r\n","import http from \"../http-common\";\r\n\r\nconst getAll = () => {\r\n  return http.get(\"/customers\");\r\n};\r\n\r\nconst get = id => {\r\n  return http.get(`/customers/${id}`);\r\n};\r\n\r\nconst create = data => {\r\n  return http.post(\"/customers\", data);\r\n};\r\n\r\nconst update = (id, data) => {\r\n  return http.put(`/customers/${id}`, data);\r\n};\r\n\r\nconst remove = id => {\r\n  return http.delete(`/customers/${id}`);\r\n};\r\n\r\nconst removeAll = () => {\r\n  return http.delete(`/customers`);\r\n};\r\n\r\nconst findByTitle = title => {\r\n  return http.get(`/customers?title=${title}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  create,\r\n  update,\r\n  remove,\r\n  removeAll,\r\n  findByTitle\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport './CustomersList.css'\r\nimport CustomerDataService from \"../services/CustomerService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () =>{ \r\n  \r\n  return (\r\n    <div className=\"\">\r\n\r\n        <p>Web journal is a collection of links to various online resources</p>\r\n\r\n\r\n    </div>\r\n  )\r\n  }\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport './AddCustomer.css'\r\nimport CustomerDataService from \"../services/CustomerService\";\r\n\r\nconst AddCustomer = () => {\r\n  const initialCustomerState = {\r\n    id: null,\r\n    title: \"\",\r\n    category: '',\r\n    description: \"\",\r\n    source: \"\",\r\n    URL: \"\",\r\n    author: \"\",\r\n    tags: \"\",\r\n    published: false\r\n  };\r\n  const [customer, setCustomer] = useState(initialCustomerState);\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCustomer({ ...customer, [name]: value });\r\n  };\r\n\r\n  const saveCustomer = () => {\r\n    var data = {\r\n      title: customer.title,\r\n      description: customer.description,\r\n      category: customer.category,\r\n      source: customer.source,\r\n      URL: customer.URL,\r\n      author: customer.author,\r\n      tags: customer.tags\r\n    };\r\n\r\n    CustomerDataService.create(data)\r\n      .then(response => {\r\n        setCustomer({\r\n          id: response.data.id,\r\n          title: response.data.title,\r\n          description: response.data.description,\r\n          category: response.category,\r\n          source: response.source,\r\n          URL: response.URL,\r\n          author: response.author,\r\n          tags: response.tags,\r\n          published: response.data.published\r\n        });\r\n        setSubmitted(true);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const newCustomer = () => {\r\n    setCustomer(initialCustomerState);\r\n    setSubmitted(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"customer-form\">\r\n      <div className=\"submit-form\">\r\n        {submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={newCustomer}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div article-form=\"true\">\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"title\">Article Title:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"title\"\r\n                required\r\n                value={customer.title}\r\n                onChange={handleInputChange}\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"description\">Description:</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"description\"\r\n                required\r\n                value={customer.description}\r\n                onChange={handleInputChange}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"category\">Category:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"category\"\r\n                required\r\n                value={customer.category || \"\"}\r\n                onChange={handleInputChange}\r\n                name=\"category\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"source\">Source:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"source\"\r\n                required\r\n                value={customer.source || \"\"}\r\n                onChange={handleInputChange}\r\n                name=\"source\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"author\">Author:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"author\"\r\n                required\r\n                value={customer.author || \"\"}\r\n                onChange={handleInputChange}\r\n                name=\"author\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"URL\">URL:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"URL\"\r\n                required\r\n                value={customer.URL || \"\"}\r\n                onChange={handleInputChange}\r\n                name=\"URL\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"tags\">Tags:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"tags\"\r\n                required\r\n                value={customer.tags|| \"\"}\r\n                onChange={handleInputChange}\r\n                name=\"tags\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={saveCustomer} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n            <br/>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCustomer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport './AddCustomer.css'\r\nimport CustomerDataService from \"../services/CustomerService\";\r\n\r\nconst Customer = props => {\r\n  const initialCustomerState = {\r\n    id: null,\r\n    title: \"\",\r\n    category: '',\r\n    description: \"\",\r\n    source: \"\",\r\n    URL: \"\",\r\n    author: \"\",\r\n    tags: \"\",\r\n    published: false\r\n  };\r\n  const [currentCustomer, setCurrentCustomer] = useState(initialCustomerState);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const getCustomer = id => {\r\n    CustomerDataService.get(id)\r\n      .then(response => {\r\n        setCurrentCustomer(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCustomer(props.match.params.id);\r\n  }, [props.match.params.id]);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    setCurrentCustomer({ ...currentCustomer, [name]: value });\r\n  };\r\n\r\n  const updatePublished = status => {\r\n    var data = {\r\n      id: currentCustomer.id,\r\n      title: currentCustomer.title,\r\n      category: currentCustomer.category,\r\n      description: currentCustomer.description,\r\n      source: currentCustomer.source,\r\n      URL: currentCustomer.URL,\r\n      author: currentCustomer.author,\r\n      tags: currentCustomer.tags,\r\n      published: status\r\n    };\r\n\r\n    CustomerDataService.update(currentCustomer.id, data)\r\n      .then(response => {\r\n        setCurrentCustomer({ ...currentCustomer, published: status });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const updateCustomer = () => {\r\n    CustomerDataService.update(currentCustomer.id, currentCustomer)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\"The customer was updated successfully!\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const deleteCustomer = () => {\r\n    CustomerDataService.remove(currentCustomer.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        props.history.push(\"/customers\");\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"customer-form\">\r\n      {currentCustomer ? (\r\n        <div className=\"edit-form\">\r\n          <h4><strong>Update Article</strong></h4>\r\n          <form>\r\n          <div article-form>\r\n            <p>{message}</p>\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"title\">Article Title:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"title\"\r\n                value={currentCustomer.title}\r\n                onChange={handleInputChange}\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"description\">Description:</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"description\"\r\n                value={currentCustomer.description}\r\n                onChange={handleInputChange}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"category\">Category:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"category\"\r\n                value={currentCustomer.category}\r\n                onChange={handleInputChange}\r\n                name=\"category\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"source\">Source:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"source\"\r\n                value={currentCustomer.dource}\r\n                onChange={handleInputChange}\r\n                name=\"source\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"author\">Author:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"author\"\r\n                value={currentCustomer.author}\r\n                onChange={handleInputChange}\r\n                name=\"author\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"URL\">URL:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"URL\"\r\n                value={currentCustomer.URL}\r\n                onChange={handleInputChange}\r\n                name=\"URL\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label className=\"labelling\" htmlFor=\"tags\">Tags:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"input-field\"\r\n                id=\"tags\"\r\n                value={currentCustomer.tags}\r\n                onChange={handleInputChange}\r\n                name=\"tags\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            <label className=\"labelling\">\r\n                <strong>Status:</strong>\r\n              </label>\r\n              {currentCustomer.published ? \"Published\" : \"Pending\"}\r\n            </div>\r\n          </div>\r\n          </form>\r\n\r\n          {currentCustomer.published ? (\r\n            <button className=\"btn btn-success\"\r\n              onClick={() => updatePublished(false)}\r\n            >\r\n              UnPublish\r\n            </button>\r\n          ) : (\r\n            <button className=\"btn btn-success\"\r\n              onClick={() => updatePublished(true)}\r\n            >\r\n              Publish\r\n            </button>\r\n          )}\r\n\r\n            <button className=\"btn btn-success\" onClick={deleteCustomer}>\r\n            Delete\r\n          </button>\r\n\r\n          <button className=\"btn btn-success\"\r\n            type=\"submit\"\r\n            onClick={updateCustomer}\r\n          >\r\n            Update\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <br />\r\n          <p>Please click on a Customer...</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Customer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport './CustomersList.css'\r\nimport CustomerDataService from \"../services/CustomerService\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomersList = () => {\r\n  const [customers, setCustomers] = useState([]);\r\n  const [currentCustomer, setCurrentCustomer] = useState(null);\r\n  const [currentIndex, setCurrentIndex] = useState(-1);\r\n  const [searchTitle, setSearchTitle] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    retrieveCustomers();\r\n  }, []);\r\n\r\n  const onChangeSearchTitle = e => {\r\n    const searchTitle = e.target.value;\r\n    setSearchTitle(searchTitle);\r\n  };\r\n\r\n  const retrieveCustomers = () => {\r\n    CustomerDataService.getAll()\r\n      .then(response => {\r\n        setCustomers(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const refreshList = () => {\r\n    retrieveCustomers();\r\n    setCurrentCustomer(null);\r\n    setCurrentIndex(-1);\r\n  };\r\n\r\n  const setActiveCustomer = (customer, index) => {\r\n    setCurrentCustomer(customer);\r\n    setCurrentIndex(index);\r\n  };\r\n\r\n  const removeAllCustomers = () => {\r\n    CustomerDataService.removeAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  const findByTitle = () => {\r\n    CustomerDataService.findByTitle(searchTitle)\r\n      .then(response => {\r\n        setCustomers(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  //search website\r\n  const search_journal = () =>{ \r\n    let searchInput = document.getElementById('article-searcher').value \r\n    searchInput=searchInput.toLowerCase(); \r\n    let allTitle = document.getElementsByClassName('list-group-item'); \r\n    \r\n    for (let i = 0; i < allTitle.length; i++) { \r\n      if (!allTitle[i].innerHTML.toLowerCase().includes(searchInput)) { \r\n              allTitle[i].parentElement.style.display=\"none\";\r\n      } \r\n      else {\r\n        allTitle[i].parentElement.style.display=\"block\";\t\t\t\t \r\n      } \r\n    } \r\n  } \r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"leftSide col-5 col-s-5\">\r\n        <div className=\"article-search\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"article-searcher\"\r\n            className=\"searchbox\"\r\n            placeholder=\"Search by title\"\r\n            value={searchTitle}\r\n            onKeyUp={search_journal}\r\n            onChange={onChangeSearchTitle}\r\n          />\r\n          <div id=\"\" className=\"article-button\">\r\n            <button\r\n              className=\"btn btn-info\"\r\n              type=\"button\"\r\n              onClick={findByTitle}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <br/>\r\n        <div className=\"article-list\">\r\n          <h3><strong>Topic List</strong></h3>\r\n\r\n          <ul className=\"list-group\">\r\n            {customers &&\r\n              customers.map((customer, index) => (\r\n                <div key={index}><p\r\n                  className={\r\n                    \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => setActiveCustomer(customer, index)}\r\n                  key={index}\r\n                >\r\n                  {customer.title}\r\n                </p></div>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={removeAllCustomers}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"rightSide col-6 col-s-6\">\r\n        <div className=\"customer-details\">\r\n        {currentCustomer ? (\r\n          <div>\r\n            <h4 className=\"\"><u>Article &nbsp;\r\n              {currentCustomer.id}</u></h4>\r\n            <p className=\"customer-group \">\r\n              <label className=\"output-labelling\">\r\n                <strong>Title:</strong>\r\n              </label>{\" \"}\r\n              {currentCustomer.title}\r\n            </p>\r\n             <p className=\"customer-group\">\r\n              <label className=\"output-labelling\">\r\n                <strong>Category:</strong>\r\n              </label>{\" \"}\r\n              {currentCustomer.category}\r\n            </p>\r\n            <p className=\"customer-group\">\r\n              <label className=\"output-labelling\">\r\n                <strong>Description:</strong>\r\n              </label>{\" \"}\r\n              {currentCustomer.description}\r\n            </p>\r\n             <p className=\"customer-group\">\r\n              <label className=\"output-labelling\">\r\n                <strong>Source:</strong>\r\n              </label>{\" \"}\r\n              {currentCustomer.source}\r\n            </p>\r\n             <p className=\"customer-group\">\r\n              <label className=\"output-labelling\">\r\n                <strong>Author:</strong>\r\n              </label>{\" \"}\r\n              {currentCustomer.author}\r\n            </p>\r\n             <p className=\"customer-group\">\r\n              <label className=\"output-labelling\">\r\n                <strong>URL:</strong>\r\n              </label>{\" \"}\r\n              {currentCustomer.url}\r\n            </p>\r\n             <p className=\"customer-group\">\r\n              <label className=\"output-labelling\">\r\n                <strong>Tags:</strong>\r\n              </label>{\" \"}\r\n              {currentCustomer.tags}\r\n            </p>\r\n             <p className=\"customer-group\">\r\n              <label className=\"output-labelling\">\r\n                <strong>Status:</strong>\r\n              </label>{\" \"}\r\n              {currentCustomer.published ? \"Published\" : \"Pending\"}\r\n            </p>\r\n\r\n            <Link\r\n              to={\"/customers/\" + currentCustomer.id}\r\n              className=\"badge badge-warning\"\r\n            >\r\n              Edit\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <p>Please click on an article to view details...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomersList;\r\n","import React, {component} from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from './Header'\nimport ArchiveNav from './Navigation'\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport AddCustomer from \"./components/AddCustomer\";\nimport Customer from \"./components/Customer\";\nimport CustomersList from \"./components/CustomersList\";\n\nfunction App() {\n  return (\n      <div className=\"\" style={{marginLeft: \"20px\"}} >\n      <Header />\n        <ArchiveNav />\n        <div className=\" row\" style={{textAlign: \"center\"}}>\n          <Router>\n            <div>\n              <ul className=\"nav nav-pills page-menu\">\n              <li><Link to={\"/\"} activeClassName=\"active\">\n                    Home\n                  </Link></li>\n                <li><Link to={\"/customers\"} activeClassName=\"active\">\n                    Articles\n                  </Link></li>\n                  <li><Link to={\"/add\"} activeClassName=\"active\">New Article</Link></li>\n              </ul>\n              </div>\n              <br/>\n              <div className=\"appContent\" style={{textAlign: \"center\"}}>\n                <Switch>\n                  <Route path=\"/add\" component={AddCustomer} />\n                  <Route path=\"/customers/:id\" component={Customer} />\n                  <Route path=\"/customers\" component={CustomersList} />\n                  <Route path=\"/\" component={Home} />\n                </Switch>\n            </div>\n        </Router>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n/*\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'jquery/dist/jquery.min.js'\nimport 'bootstrap/dist/js/bootstrap.min.js'\n*/\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}